{"version":3,"sources":["exercises/indexed-access-type/index.ts","exercises/indexed-access-type/index.solution.ts","exercises/indexed-access-type/test.ts","exercises/branded-type/index.ts","exercises/branded-type/index.solution.ts","exercises/branded-type/test.ts","exercises/generics/index.ts","exercises/generics/index.solution.ts","exercises/generics/mock.ts","exercises/generics/test.ts","exercises/generics-with-inference/index.ts","exercises/generics-with-inference/index.solution.ts","exercises/generics-with-inference/mock.ts","exercises/generics-with-inference/test.ts","operators/check-type-script-project/service.ts","components/loading-container/index.tsx","observables/ui.ts","components/collapsible-panel/index.tsx","components/file-title/index.tsx","components/file-tree-view/icons.tsx","components/file-tree-view/index.tsx","components/auto-resizer/index.tsx","components/dialog/index.tsx","components/monaco-diff-viewer/index.tsx","components/monaco-editor/diff-dialog.tsx","components/monaco-editor/revalidate-model.ts","components/monaco-editor/index.tsx","components/validation-errors/index.tsx","lib/exercise-structures.ts","lib/local-data.ts","observables/exercise.ts","observables/url-params.ts","observables/exercises-progress.ts","observables/migrations/2020-09-26.ts","operators/check-type-script-project/index.ts","containers/exercise/index.tsx","components/footer/index.tsx","components/header/ts-logo.tsx","components/header/index.tsx","containers/navigation/index.tsx","containers/page-layout/index.tsx","containers/app/fonts.ts","containers/app/index.tsx","serviceWorker.ts","index.tsx"],"names":["addMethods","methods","module","exports","w","Worker","name","Loading","color","LoadingContainer","observable","render","update","useState","setUpdate","useMemo","state","value","undefined","subscription","emitChanges","subscribe","newValue","useLayoutEffect","unsubscribe","useObservable","load","ui","subject","ReplaySubject","panels","exercise","collapsed","files","solutionFiles","updateState","newState","next","observable$","expandPanel","panelName","collapsePanel","Header","styled","div","orientation","HeaderLabel","Content","CollapseButton","button","Wrapper","CollapsiblePanel","id","header","children","collapse","expand","onClick","FileTitleWrapper","FileTitleLabel","span","FileTitle","filename","readOnly","replace","DirectoryIcon","version","xmlns","viewBox","width","height","d","fill","FileIcon","FileTreeViewWrapper","FileTreeBranchWrapper","FileTreeBranchLabelText","FileTreeBranchLabelActions","FileTreeBranchRevert","FileTreeBranchLabel","selectable","selected","FileTreeBranchContent","FileTreeViewBranch","branch","selectedFilename","onSelectFilename","modifiedFilenames","revertFile","useCallback","isDirectory","length","revert","map","subBranch","FileTreeView","fileTree","treeItems","result","items","Object","keys","bits","split","parentTreeItem","parentTreePath","bit","shift","push","parentPath","join","item","Boolean","buildTree","decorateWithAutoResize","Component","props","size","setSize","wrapperRef","useRef","useEffect","updateSize","debounce","current","newWidth","offsetWidth","newHeight","offsetHeight","window","addEventListener","passive","interval","setInterval","removeEventListener","clearInterval","ref","DialogBackground","DialogWrapper","CloseButton","stopEventPropagation","e","stopPropagation","Dialog","onClose","MonacoDiffViewer","instance","instanceDiv","assignRef","newRef","this","editor","createDiffEditor","options","renderValidationDecorations","setModels","original","modified","setModel","prevProps","layout","dispose","style","React","Panes","EditorArea","EditorAreaCaption","EditorAreaTitle","EditorAreaContent","noop","DiffDialog","filenames","onSelectFile","otherProps","reduce","content","createTreeFromFilenames","flattenDiagnosticMessageText","diag","newLine","indent","i","messageText","kid","model","a","isDisposed","languages","typescript","getTypeScriptWorker","getWorker","uri","worker","Promise","all","getSyntacticDiagnostics","toString","getSemanticDiagnostics","diagnostics","it","concat","markers","start","getPositionAt","end","severity","MarkerSeverity","Error","startLineNumber","lineNumber","startColumn","column","endLineNumber","endColumn","message","setModelMarkers","typescriptDefaults","setCompilerOptions","strict","target","ScriptTarget","ES2018","moduleResolution","ModuleResolutionKind","NodeJs","typeRoots","extensionsToLanguages","ts","json","MonacoEditor","models","solutionsModels","solutionsFilenames","viewStates","lastUpdates","setSelectedSolutionFilename","solutionsSelectedFilename","setState","solution","language","pop","createModel","Uri","file","namespace","onDidChangeContent","getValue","onChange","entries","values","create","initialized","newSelectedFilename","saveViewState","updateOptions","revalidateModel","viewState","restoreViewState","focus","position","setPosition","revealLine","setValue","selectedSolutionFilename","getSelectedSolutionFilename","showSolutions","onSolutionsClose","ValidationErrorsWrapper","ol","ValidationErrorsItem","li","ValidationErrors","memo","errors","error","index","typeAssertions","require","default","exerciseStructures","localData","key","defaultValue","data","localStorage","getItem","JSON","parse","setItem","stringify","createModifiedFileTree","contents","tree","prototype","hasOwnProperty","call","exercisesCache","defaultUrlParams","urlParams","getCurrentRawParams","qs","String","location","hash","substr","getCurrentParams","assign","extend","params","initialState","completedExercises","switchToExercise","exerciseNumber","exercisesProgress","localStorageKey","oldValueRaw","oldValue","lastCompletedExerciseNumber","removeItem","migrate","exercisesCount","currentExerciseNumber","Number","completeExercise","Math","min","skipExercise","goToExercise","createService","fileTreeToFileContents","res","diffFiles","oldFiles","newFiles","lastExerciseNumber","ExerciseWrapper","EditorWrapper","ExercisePanelWrapper","MainAreaWrapper","CompletedExerciseWrapper","CompletedExerciseLabel","ButtonsWrapper","ExerciseButton","calculateModifiedFilenames","Exercise","exerciseOriginalFiles","saveToLocalStorage","code","createExercise","solutionsVisible","setSolutionsVisible","validationErrors$","pipe","parentObservable","service","Observable","subscriber","prevFiles","init","updateFiles","getErrors","add","terminate","setSelectedFilename","goToFile","onErrorClick","hideSolutions","theme","onNavigate","minimap","enabled","FooterWrapper","footer","currentYear","Date","getFullYear","Footer","href","TsLogo","clipRule","fillRule","HeaderWrapper","HeaderLogo","h1","HeaderSubLogo","NavBar","nav","NavBarLabel","NavBarItem","completed","Navigation","combineLatest","PageLayoutWrapper","PageLayoutMain","main","PageLayout","fonts","css","globalStyles","App","styles","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8242fcae.chunk.js","sourcesContent":["export default \"/*\\n\\nIntro:\\n\\n    In this example, you have a collection of books and another of authors\\n    Book are linked to an author through the `authorId` property\\n    The goal of this exercise is to use Indexed Access Type when referencing the type of an Author[\\\"id\\\"]\\n\\nExercise:\\n\\n    Step 1 : Use Author[\\\"id\\\"] as type wherever we reference a Author id\\n    Step 2 : Change the `id` type to `string` in the Author interface\\n             By only changing this type, it should fix all typing errors of the file `test.ts`\\n\\n*/\\n\\nexport interface Author {\\n    id: string | number;\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string;\\n    authorId: string | number;\\n    title: string;\\n    date: string;\\n}\\n\\nexport const authors: Author[] = [\\n    {\\n        id: 'e54b2fd7',\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4',\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: Book[] = [\\n    {\\n        id: '18fc78ae',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8',\\n        authorId: '5d92aef4',\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1',\\n        authorId: '398ed487',\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\\nexport function getBookFromAuthor(authorId: string | number) {\\n    return books.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): string | number {\\n    return book.authorId;\\n}\\n\";","export default \"/*\\n\\nIntro:\\n\\n    In this example, you have a collection of books and another of authors\\n    Book are linked to an author through the `authorId` property\\n    The goal of this exercise is to use Indexed Access Type when referencing the type of an Author[\\\"id\\\"]\\n\\nExercise:\\n\\n    Step 1 : Use Author[\\\"id\\\"] as type wherever we reference a Author id\\n    Step 2 : Change the `id` type to `string` in the Author interface\\n             By only changing this type, it should fix all typing errors of the file `test.ts`\\n\\n*/\\n\\nexport interface Author {\\n    id: string;\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string;\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport const authors: Author[] = [\\n    {\\n        id: 'e54b2fd7',\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4',\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: Book[] = [\\n    {\\n        id: '18fc78ae',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8',\\n        authorId: '5d92aef4',\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1',\\n        authorId: '398ed487',\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return books.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\";","export default \"import {IsTypeEqual, typeAssert} from 'type-assertions';\\nimport {authors, books, extractAuthorIdFromBook, getBookFromAuthor} from './index';\\n\\ntypeAssert<IsTypeEqual<string, ReturnType<typeof extractAuthorIdFromBook>>>();\\ntypeAssert<IsTypeEqual<string, Parameters<typeof getBookFromAuthor>[0]>>();\\ntypeAssert<IsTypeEqual<typeof authors, {id: string; name: string; age: number}[]>>();\\ntypeAssert<IsTypeEqual<typeof books, {id: string; authorId: string; title: string; date: string}[]>>();\\n\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<string | number, ReturnType<typeof extractAuthorIdFromBook>>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<string | number, Parameters<typeof getBookFromAuthor>[0]>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<typeof authors, {id: string | number; name: string; age: number}[]>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<typeof books, {id: string; authorId: string | number; title: string; date: string}[]>>();\\n\";","export default \"/*\\n\\nModify the file \\\"index.ts\\\"\\nAnd check that \\\"test.ts\\\" does not display any errors\\n\\nIntro:\\n\\n    This exercise follow the previous one\\n    You have a collection of books and another of authors\\n    Book are linked to an author through the `authorId` property\\n    The goal of this exercise is to use a Branded Type to ensure we always use a specific type when referencing Author[\\\"id\\\"]\\n\\nExercise:\\n\\n    - Use a specific branded type for Author[\\\"id\\\"]\\n    - Use a specific branded type for Book[\\\"id\\\"]\\n*/\\n\\nexport interface Author {\\n    id: string;\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string;\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport const authors: Author[] = [\\n    {\\n        id: 'e54b2fd7',\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4',\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: Book[] = [\\n    {\\n        id: '18fc78ae',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8',\\n        authorId: '5d92aef4',\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1',\\n        authorId: '398ed487',\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return books.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\";","export default \"/*\\n\\nModify the file \\\"index.ts\\\"\\nAnd check that \\\"test.ts\\\" does not display any errors\\n\\nIntro:\\n\\n    This exercise follow the previous one\\n    You have a collection of books and another of authors\\n    Book are linked to an author through the `authorId` property\\n    The goal of this exercise is to use a Branded Type to ensure we always use a specific type when referencing Author[\\\"id\\\"]\\n\\nExercise:\\n\\n    - Use a specific branded type for Author[\\\"id\\\"]\\n    - Use a specific branded type for Book[\\\"id\\\"]\\n*/\\n\\nexport interface Author {\\n    id: string & {__type: 'AuthorId'};\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string & {__type: 'AuthorId'};\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport const authors: Author[] = [\\n    {\\n        id: 'e54b2fd7' as Author['id'],\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4' as Author['id'],\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: Book[] = [\\n    {\\n        id: '18fc78ae' as Book['id'],\\n        authorId: 'e54b2fd7' as Author['id'],\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8' as Book['id'],\\n        authorId: 'e54b2fd7' as Author['id'],\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8' as Book['id'],\\n        authorId: '5d92aef4' as Author['id'],\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1' as Book['id'],\\n        authorId: '398ed487' as Author['id'],\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return books.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\";","export default \"import {IsTypeEqual, typeAssert} from 'type-assertions';\\nimport {Author, Book, authors, books, extractAuthorIdFromBook, getBookFromAuthor} from './index';\\n\\ntypeAssert<IsTypeEqual<Author['id'], ReturnType<typeof extractAuthorIdFromBook>>>();\\ntypeAssert<IsTypeEqual<Author['id'], Parameters<typeof getBookFromAuthor>[0]>>();\\ntypeAssert<IsTypeEqual<typeof authors, {id: Author['id']; name: string; age: number}[]>>();\\ntypeAssert<IsTypeEqual<typeof books, {id: Book['id']; authorId: Author['id']; title: string; date: string}[]>>();\\n\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<string, ReturnType<typeof extractAuthorIdFromBook>>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<string, Parameters<typeof getBookFromAuthor>[0]>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<typeof authors, {id: string; name: string; age: number}[]>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<typeof books, {id: string; authorId: string; title: string; date: string}[]>>();\\n// @ts-expect-error\\ntypeAssert<IsTypeEqual<Author['id'], Book['id']>>();\\n\";","export default \"/*\\n\\nIntro:\\n\\n    We want to export methods to retrieve the authors and the books\\n    The response of those method will be wrapped in a newly create object represented by the interface `ListWrapper`\\n\\n    Changes on this file :\\n    - new interface `ListWrapper`\\n    - new method `getAuthors`\\n    - new method `getBooks`\\n    - move `authors` and `books` in a mock file to simulate the fact it comes from an http request\\n\\nExercise:\\n\\n    - Modify the `ListWrapper` interface and the 2 new methods to make them typesage\\n        - `getAuthors().items` must be typed as `Author`\\n        - `getBooks().items` must be typed as `Book`\\n*/\\n\\nimport {authors, books} from './mock';\\n\\nexport interface ListWrapper {\\n    items: Array<any>;\\n    count: number;\\n}\\n\\nexport interface Author {\\n    id: string & {__type: 'AuthorId'};\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string & {__type: 'BookId'};\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport function getAuthors() {\\n    return {\\n        items: authors,\\n        count: authors.length\\n    };\\n}\\n\\nexport function getBooks() {\\n    return {\\n        items: books,\\n        count: books.length\\n    };\\n}\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return getBooks().items.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\";","export default \"/*\\n\\nIntro:\\n\\n    We want to export methods to retrieve the authors and the books\\n    The response of those method will be wrapped in a newly create object represented by the interface `ListWrapper`\\n\\n    Changes on this file :\\n    - new interface `ListWrapper`\\n    - new method `getAuthors`\\n    - new method `getBooks`\\n    - move `authors` and `books` in a mock file to simulate the fact it comes from an http request\\n\\nExercise:\\n\\n    - Modify the `ListWrapper` interface and the 2 new methods to make them typesage\\n        - `getAuthors().items` must be typed as `Author`\\n        - `getBooks().items` must be typed as `Book`\\n*/\\n\\nimport {authors, books} from './mock';\\n\\nexport interface ListWrapper<T> {\\n    items: Array<T>;\\n    count: number;\\n}\\n\\nexport interface Author {\\n    id: string & {__type: 'AuthorId'};\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string & {__type: 'BookId'};\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport function getAuthors(): ListWrapper<Author> {\\n    return {\\n        items: authors,\\n        count: authors.length\\n    };\\n}\\n\\nexport function getBooks(): ListWrapper<Book> {\\n    return {\\n        items: books,\\n        count: books.length\\n    };\\n}\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return getBooks().items.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\";","export default \"export const authors: any = [\\n    {\\n        id: 'e54b2fd7',\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4',\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: any = [\\n    {\\n        id: '18fc78ae',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8',\\n        authorId: '5d92aef4',\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1',\\n        authorId: '398ed487',\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\";","export default \"import {IsNotAny, IsTypeEqual, typeAssert} from 'type-assertions';\\nimport {Author, Book, getAuthors, getBooks} from './index';\\n\\ntypeAssert<IsTypeEqual<Author, ReturnType<typeof getAuthors>['items'][number]>>();\\ntypeAssert<IsTypeEqual<Book, ReturnType<typeof getBooks>['items'][number]>>();\\ntypeAssert<IsNotAny<ReturnType<typeof getAuthors>['items'][number]>>();\\ntypeAssert<IsNotAny<ReturnType<typeof getBooks>['items'][number]>>();\\n\";","export default \"/*\\n\\nIntro:\\n\\n    Now we want to select a random author and a random books among all the authors and books\\n    To do this we created a new method `getRandomElementFromArray`\\n\\n    Changes on this file :\\n    - new function `getRandomElementFromArray`\\n    - new variables `randomAuthor' and `randomBook`\\n\\nExercise:\\n\\n    - Modify the function `getRandomElementFromArray` to make to return the good type depending on what it receive as parameter\\n*/\\n\\nimport {authors, books} from './mock';\\n\\nexport interface ListWrapper<T> {\\n    items: Array<T>;\\n    count: number;\\n}\\n\\nexport interface Author {\\n    id: string & {__type: 'AuthorId'};\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string & {__type: 'BookId'};\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport function getAuthors(): ListWrapper<Author> {\\n    return {\\n        items: authors,\\n        count: authors.length\\n    };\\n}\\n\\nexport function getBooks(): ListWrapper<Book> {\\n    return {\\n        items: books,\\n        count: books.length\\n    };\\n}\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return getBooks().items.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\\nexport function getRandomElementFromArray(items) {\\n    let randomIndex = Math.floor(Math.random() * items.length);\\n    return items[randomIndex];\\n}\\n\\nexport const randomAuthor = getRandomElementFromArray(getAuthors().items);\\nexport const randomBook = getRandomElementFromArray(getBooks().items);\\n\";","export default \"/*\\n\\nIntro:\\n\\n    Now we want to select a random author and a random books among all the authors and books\\n    To do this we created a new method `getRandomElementFromArray`\\n\\n    Changes on this file :\\n    - new function `getRandomElementFromArray`\\n    - new variables `randomAuthor' and `randomBook`\\n\\nExercise:\\n\\n    - Modify the function `getRandomElementFromArray` to make to return the good type depending on what it receive as parameter\\n*/\\n\\nimport {authors, books} from './mock';\\n\\nexport interface ListWrapper<T> {\\n    items: Array<T>;\\n    count: number;\\n}\\n\\nexport interface Author {\\n    id: string & {__type: 'AuthorId'};\\n    name: string;\\n    age: number;\\n}\\n\\nexport interface Book {\\n    id: string & {__type: 'BookId'};\\n    authorId: Author['id'];\\n    title: string;\\n    date: string;\\n}\\n\\nexport function getBookFromAuthor(authorId: Author['id']) {\\n    return books.filter((book) => book.authorId === authorId);\\n}\\n\\nexport function extractAuthorIdFromBook(book: Book): Author['id'] {\\n    return book.authorId;\\n}\\n\\nexport function getAuthors(): ListWrapper<Author> {\\n    return {\\n        items: authors,\\n        count: authors.length\\n    };\\n}\\n\\nexport function getBooks(): ListWrapper<Book> {\\n    return {\\n        items: books,\\n        count: books.length\\n    };\\n}\\n\\nexport function getRandomElementFromArray<T extends any>(items: Array<T>): T {\\n    let randomIndex = Math.floor(Math.random() * items.length);\\n    return items[randomIndex];\\n}\\n\\nexport const randomAuthor = getRandomElementFromArray(getAuthors().items);\\nexport const randomBook = getRandomElementFromArray(getBooks().items);\\n\";","export default \"export const authors: any = [\\n    {\\n        id: 'e54b2fd7',\\n        name: 'John Doe',\\n        age: 25\\n    },\\n    {\\n        id: '5d92aef4',\\n        name: 'Jane Doe',\\n        age: 26\\n    }\\n];\\n\\nexport const books: any = [\\n    {\\n        id: '18fc78ae',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 1',\\n        date: '2016-12-02'\\n    },\\n    {\\n        id: 'e15dfc8',\\n        authorId: 'e54b2fd7',\\n        title: 'Book 2',\\n        date: '2015-05-26'\\n    },\\n    {\\n        id: 'ace518c8',\\n        authorId: '5d92aef4',\\n        title: 'Book 3',\\n        date: '2011-08-15'\\n    },\\n    {\\n        id: '9afd2ce1',\\n        authorId: '398ed487',\\n        title: 'Book 4',\\n        date: '2016-02-03'\\n    }\\n];\\n\";","export default \"import {IsTypeEqual, typeAssert} from 'type-assertions';\\nimport {Author, Book, randomAuthor, randomBook} from './index';\\n\\ntypeAssert<IsTypeEqual<Author, typeof randomAuthor>>();\\ntypeAssert<IsTypeEqual<Book, typeof randomBook>>();\\n\";","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"init\",\"updateFiles\",\"getErrors\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"cbfd11a8e2484c513450.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React, {useLayoutEffect, useMemo, useState} from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport {Observable, Subscription} from 'rxjs';\n\nfunction Loading() {\n    return <PulseLoader color='gray' />;\n}\n\ntype RenderCallback<T> = (value: T) => React.ReactNode;\n\nfunction useObservable<T>(observable: Observable<T>): T | undefined {\n    const [, setUpdate] = useState(false);\n\n    const {subscription, value} = useMemo(() => {\n        const state = {\n            value: undefined as T | undefined,\n            subscription: undefined as Subscription | undefined\n        };\n        let emitChanges = false;\n        state.subscription = observable.subscribe((newValue) => {\n            state.value = newValue;\n            if (emitChanges) {\n                setUpdate((update) => !update);\n            }\n        });\n        emitChanges = true;\n        return state;\n    }, [observable, setUpdate]);\n\n    useLayoutEffect(() => () => subscription?.unsubscribe(), [subscription]);\n\n    return value;\n}\n\nfunction LoadingContainer<T>({observable, render}: {observable: Observable<T>; render: RenderCallback<T>}) {\n    const update = useObservable(observable);\n\n    if (update === undefined) {\n        return <Loading />;\n    }\n\n    return <>{render(update)}</>;\n}\n\nexport function load<T>(observable: Observable<T>, render: RenderCallback<T>) {\n    return <LoadingContainer observable={observable} render={render} />;\n}\n","import {ReplaySubject} from 'rxjs';\n\nexport const ui = (() => {\n    const initialState = {\n        panels: {\n            exercise: {\n                collapsed: false\n            },\n            files: {\n                collapsed: false\n            },\n            solutionFiles: {\n                collapsed: false\n            }\n        } as {[panel: string]: {collapsed: boolean}}\n    };\n\n    type State = typeof initialState;\n\n    const subject = new ReplaySubject<State>(1);\n\n    let state = initialState;\n\n    subject.next(state);\n\n    function updateState(newState: State) {\n        state = newState;\n        subject.next(newState);\n    }\n\n    return {\n        observable$: subject,\n        expandPanel: (panelName: string) =>\n            updateState({\n                ...state,\n                panels: {\n                    ...state.panels,\n                    [panelName]: {\n                        ...state.panels[panelName],\n                        collapsed: false\n                    }\n                }\n            }),\n        collapsePanel: (panelName: string) =>\n            updateState({\n                ...state,\n                panels: {\n                    ...state.panels,\n                    [panelName]: {\n                        ...state.panels[panelName],\n                        collapsed: true\n                    }\n                }\n            })\n    };\n})();\n","import styled from '@emotion/styled';\nimport React, {useMemo} from 'react';\nimport {load} from 'components/loading-container';\nimport {ui} from 'observables/ui';\n\nconst width = 200;\nconst height = 150;\n\ntype Orientation = 'vertical' | 'horizontal';\n\nconst Header = styled.div<{collapsed: boolean; orientation: Orientation}>`\n    position: absolute;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 0;\n    flex-shrink: 0;\n    height: 30px;\n    min-width: 100%;\n    transform: rotate(0) translateX(0);\n    transform-origin: top left;\n    cursor: pointer;\n    background: #eee;\n    border-bottom: 1px #ddd solid;\n    ${({collapsed, orientation}) =>\n        collapsed && orientation === 'vertical'\n            ? `\n                transform: rotate(-90deg) translateX(-100%);\n                button {\n                    display: none;\n                }\n            `\n            : ''}\n`;\n\nconst HeaderLabel = styled.div`\n    flex: 1 1 auto;\n    font-weight: bold;\n    color: rgba(0, 0, 0, 0.75);\n    line-height: 30px;\n    padding: 0 10px;\n`;\n\nconst Content = styled.div<{collapsed: boolean; orientation: Orientation}>`\n    flex: 1 1 auto;\n    padding: 30px 0 0;\n    transform: scaleX(100%) scaleY(100%);\n    transform-origin: ${({orientation}) => (orientation === 'vertical' ? 'left center' : 'center bottom')};\n    opacity: 1;\n    transition: transform 0.2s linear, opacity 0.2s linear;\n    ${({collapsed, orientation}) =>\n        collapsed\n            ? `\n                position: absolute;\n                transform: ${orientation === 'vertical' ? 'scaleX' : 'scaleY'}(0);\n                opacity: 0;\n            `\n            : ''}\n`;\n\nconst CollapseButton = styled.button`\n    display: block;\n    float: right;\n    border: none;\n    padding: 5px 10px;\n    background: transparent;\n    font-weight: bold;\n    cursor: pointer;\n    &::before {\n        content: '_';\n    }\n`;\n\nconst Wrapper = styled.div<{collapsed: boolean; orientation: Orientation}>`\n    position: relative;\n    background-color: ${({collapsed}) => (collapsed ? '#eee' : `#f6f6f6`)};\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 ${({collapsed, orientation}) => (collapsed ? '30px' : `${orientation === 'vertical' ? width : height}px`)};\n    ${({orientation}) => (orientation === 'vertical' ? 'border-right' : 'border-bottom')}: 1px #ddd solid;\n    &:last-of-type {\n        ${({orientation}) => (orientation === 'vertical' ? 'border-right' : 'border-bottom')}: none;\n        ${({orientation}) => (orientation === 'vertical' ? 'border-left' : 'border-top')}: 1px #ddd solid;\n    }\n    transition: flex-basis 0.2s linear, background-color 0.2s linear;\n`;\n\nexport function CollapsiblePanel({\n    id,\n    header,\n    orientation,\n    children\n}: {\n    id: string;\n    header: React.ReactNode | string;\n    orientation: Orientation;\n    children: React.ReactNode;\n}) {\n    const [collapse, expand] = useMemo(() => [() => ui.collapsePanel(id), () => ui.expandPanel(id)], [id]);\n\n    return load(ui.observable$, ({panels}) => (\n        <Wrapper collapsed={panels[id].collapsed} orientation={orientation}>\n            <Header\n                collapsed={panels[id].collapsed}\n                orientation={orientation}\n                onClick={panels[id].collapsed ? expand : collapse}>\n                <HeaderLabel>{header}</HeaderLabel>\n                <CollapseButton />\n            </Header>\n            <Content collapsed={panels[id].collapsed} orientation={orientation}>\n                {children}\n            </Content>\n        </Wrapper>\n    ));\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst FileTitleWrapper = styled.div`\n    flex: 0 0 auto;\n    padding: 0 10px;\n    height: 30px;\n    line-height: 30px;\n    border-bottom: 1px #ddd solid;\n    background: #eee;\n    font-size: 14px;\n    color: #0033aa;\n`;\n\nconst FileTitleLabel = styled.span`\n    margin-left: 20px;\n    font-size: 12px;\n    color: #339900;\n`;\n\nexport function FileTitle({filename, readOnly}: {filename: string; readOnly: boolean}) {\n    return (\n        <FileTitleWrapper>\n            {filename.replace(/^\\//, '')}\n            {readOnly && <FileTitleLabel>Read Only</FileTitleLabel>}\n        </FileTitleWrapper>\n    );\n}\n","import React from 'react';\n\nexport const DirectoryIcon = ({color}: {color: string}) => (\n    <svg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'>\n        <path\n            d='M0 4C3.22 4 5.24 4 6.04 4C6.43 4 6.8 4.19 7.03 4.51C7.23 4.78 7.71 5.46 8.49 6.54L16 6.54L16 16L0 16L0 4Z'\n            fill={color}\n        />\n    </svg>\n);\n\nexport const FileIcon = ({color}: {color: string}) => (\n    <svg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'>\n        <path d='M2 10L8 10L8 4L14 4L14 16L2 16' fill={color} />\n        <path d='M2 9L7 9L7 4' fill={color} />\n    </svg>\n);\n","import styled from '@emotion/styled';\nimport React, {useCallback, useMemo} from 'react';\nimport {FileTree} from 'lib/file-tree';\nimport {DirectoryIcon, FileIcon} from './icons';\n\ninterface FileTreeBranch {\n    name: string;\n    filename: string;\n    readOnly: boolean;\n    children: FileTreeBranch[];\n}\n\nfunction buildTree(fileTree: FileTree): FileTreeBranch[] {\n    const result: FileTreeBranch[] = [];\n    const items: {[key: string]: FileTreeBranch} = {};\n    for (const filename of Object.keys(fileTree)) {\n        const bits = filename.replace(/^\\//, '').split('/');\n        let parentTreeItem = null;\n        const parentTreePath = [];\n        while (bits.length > 1) {\n            const bit = bits.shift()!;\n            parentTreePath.push(bit);\n            const parentPath = parentTreePath.join('/');\n            if (!items[parentPath]) {\n                items[parentPath] = {\n                    name: bit,\n                    filename: parentPath,\n                    readOnly: true,\n                    children: []\n                };\n                if (parentTreeItem) {\n                    parentTreeItem.children.push(items[parentPath]);\n                } else {\n                    result.push(items[parentPath]);\n                }\n            }\n            parentTreeItem = items[parentPath];\n        }\n        const name = bits.shift()!;\n        const item: FileTreeBranch = {\n            name,\n            filename,\n            readOnly: Boolean(fileTree[filename].readOnly),\n            children: []\n        };\n        if (parentTreeItem) {\n            parentTreeItem.children.push(item);\n        } else {\n            result.push(item);\n        }\n    }\n    return result;\n}\n\nconst FileTreeViewWrapper = styled.div`\n    position: relative;\n    user-select: none;\n`;\n\nconst FileTreeBranchWrapper = styled.div`\n    margin-left: 15px;\n`;\n\nconst FileTreeBranchLabelText = styled.div`\n    position: relative;\n    z-index: 1;\n`;\n\nconst FileTreeBranchLabelActions = styled.div`\n    float: right;\n    margin-right: 15px;\n    color: gray;\n`;\n\nconst FileTreeBranchRevert = styled.button`\n    background: none;\n    color: white;\n    cursor: pointer;\n    border: none;\n    padding: 2px 5px;\n    margin-right: -6px;\n    &:hover {\n        text-decoration: underline;\n        text-decoration-style: dotted;\n    }\n`;\n\nconst FileTreeBranchLabel = styled.div<{selected: boolean; selectable: boolean; readOnly: boolean}>`\n    display: block;\n    cursor: ${({selectable}) => (selectable ? 'pointer' : 'default')};\n    pointer-events: ${({selectable}) => (selectable ? 'all' : 'none')};\n    color: ${({selected, readOnly}) => (selected ? 'white' : readOnly ? '#555' : 'black')};\n    height: 30px;\n    line-height: 30px;\n    font-size: 14px;\n    ${({selected}) =>\n        selected\n            ? `\n                &::before {\n                    z-index: 0;\n                    display: block;\n                    position: absolute;\n                    content: '';\n                    background: rgb(101,125,176);\n                    left: 0;\n                    right: 0;\n                    height: 30px;\n                }`\n            : ''}\n`;\n\nconst FileTreeBranchContent = styled.div``;\n\nfunction FileTreeViewBranch({\n    branch,\n    selectedFilename,\n    onSelectFilename,\n    modifiedFilenames,\n    revertFile\n}: {\n    branch: FileTreeBranch;\n    selectedFilename: string;\n    onSelectFilename: (filename: string) => void;\n    modifiedFilenames: Record<string, true>;\n    revertFile: (filename: string) => void;\n}) {\n    const onClick = useCallback(() => {\n        onSelectFilename(branch.filename);\n    }, [branch, onSelectFilename]);\n    const selected = selectedFilename === branch.filename;\n    const isDirectory = branch.children.length > 0;\n    const revert = useCallback(() => revertFile(branch.filename), [branch, revertFile]);\n    return (\n        <FileTreeBranchWrapper>\n            <FileTreeBranchLabel\n                onClick={onClick}\n                selectable={branch.children.length === 0}\n                selected={selected}\n                readOnly={branch.readOnly}>\n                <FileTreeBranchLabelText>\n                    {isDirectory ? (\n                        <DirectoryIcon color='gray' />\n                    ) : (\n                        <FileIcon color={selected ? 'rgba(255,255,255,0.75)' : 'gray'} />\n                    )}{' '}\n                    {branch.name}\n                    <FileTreeBranchLabelActions>\n                        {modifiedFilenames[branch.filename] &&\n                            (selected ? <FileTreeBranchRevert onClick={revert}>revert</FileTreeBranchRevert> : '*')}\n                    </FileTreeBranchLabelActions>\n                </FileTreeBranchLabelText>\n            </FileTreeBranchLabel>\n            {isDirectory && (\n                <FileTreeBranchContent>\n                    {branch.children.map((subBranch) => (\n                        <FileTreeViewBranch\n                            key={subBranch.filename}\n                            branch={subBranch}\n                            selectedFilename={selectedFilename}\n                            onSelectFilename={onSelectFilename}\n                            modifiedFilenames={modifiedFilenames}\n                            revertFile={revertFile}\n                        />\n                    ))}\n                </FileTreeBranchContent>\n            )}\n        </FileTreeBranchWrapper>\n    );\n}\n\nexport function FileTreeView({\n    fileTree,\n    selectedFilename,\n    onSelectFilename,\n    modifiedFilenames,\n    revertFile\n}: {\n    fileTree: FileTree;\n    selectedFilename: string;\n    onSelectFilename: (filename: string) => void;\n    modifiedFilenames: Record<string, true>;\n    revertFile: (filename: string) => void;\n}) {\n    const treeItems = useMemo(() => buildTree(fileTree), [fileTree]);\n    return (\n        <FileTreeViewWrapper>\n            {treeItems.map((branch) => (\n                <FileTreeViewBranch\n                    key={branch.filename}\n                    branch={branch}\n                    selectedFilename={selectedFilename}\n                    onSelectFilename={onSelectFilename}\n                    modifiedFilenames={modifiedFilenames}\n                    revertFile={revertFile}\n                />\n            ))}\n        </FileTreeViewWrapper>\n    );\n}\n","import styled from '@emotion/styled';\nimport debounce from 'debounce';\nimport React, {useEffect, useRef, useState} from 'react';\n\ntype PropsWithSize<T> = T & {\n    width?: string | number;\n    height?: string | number;\n};\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    overflow: hidden;\n`;\n\nexport function decorateWithAutoResize<T>(\n    Component: React.ComponentType<PropsWithSize<T>>\n): React.ComponentType<PropsWithSize<T>> {\n    return (props: T) => {\n        const [size, setSize] = useState({width: '100%', height: '100%'});\n        const wrapperRef = useRef<HTMLDivElement>(null);\n        useEffect(() => {\n            const updateSize = debounce(() => {\n                setSize((size) => {\n                    if (!wrapperRef.current) {\n                        return size;\n                    }\n                    const newWidth = `${wrapperRef.current.offsetWidth}px`;\n                    const newHeight = `${wrapperRef.current.offsetHeight}px`;\n                    if (size.width === newWidth && size.height === newHeight) {\n                        return size;\n                    }\n                    return {\n                        width: newWidth,\n                        height: newHeight\n                    };\n                });\n            }, 100);\n            window.addEventListener('resize', updateSize, {passive: true});\n            const interval = setInterval(updateSize, 500);\n            return () => {\n                window.removeEventListener('resize', updateSize);\n                clearInterval(interval);\n            };\n        }, [wrapperRef]);\n        return (\n            <Wrapper ref={wrapperRef}>\n                <Component {...props} {...size} />\n            </Wrapper>\n        );\n    };\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst DialogBackground = styled.div`\n    display: block;\n    position: fixed;\n    background: rgba(0, 0, 0, 0.5);\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1000;\n`;\n\nconst DialogWrapper = styled.div`\n    position: absolute;\n    top: 50px;\n    right: 50px;\n    bottom: 50px;\n    left: 50px;\n    padding: 40px 10px 10px;\n    background: white;\n`;\n\nconst CloseButton = styled.button`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n`;\n\nconst stopEventPropagation = (e: React.UIEvent) => e.stopPropagation();\n\nexport function Dialog({children, onClose}: {children: React.ReactNode; onClose: () => void}) {\n    return (\n        <DialogBackground onClick={onClose}>\n            <DialogWrapper onClick={stopEventPropagation}>\n                <CloseButton onClick={onClose}>Close</CloseButton>\n                {children}\n            </DialogWrapper>\n        </DialogBackground>\n    );\n}\n","import {editor} from 'monaco-editor';\nimport React from 'react';\nimport {decorateWithAutoResize} from 'components/auto-resizer';\n\ninterface MonacoDiffViewerProps {\n    width?: string | number;\n    height?: string | number;\n    original: editor.IModel;\n    modified: editor.IModel;\n    options?: editor.IDiffEditorConstructionOptions;\n}\n\nexport const MonacoDiffViewer = decorateWithAutoResize(\n    class extends React.Component<MonacoDiffViewerProps> {\n        protected instance: editor.IStandaloneDiffEditor | null = null;\n        protected instanceDiv: HTMLElement | null = null;\n        assignRef = (newRef: HTMLElement | null) => (this.instanceDiv = newRef);\n\n        public componentDidMount() {\n            this.instance = editor.createDiffEditor(this.instanceDiv!, {\n                ...this.props.options,\n                renderValidationDecorations: 'on'\n            });\n            this.setModels();\n        }\n\n        protected setModels() {\n            const {original, modified} = this.props;\n            this.instance!.setModel({\n                original,\n                modified\n            });\n        }\n\n        public componentDidUpdate(prevProps: Readonly<MonacoDiffViewerProps>): void {\n            if (this.props.modified !== prevProps.modified || this.props.original !== prevProps.original) {\n                this.setModels();\n            }\n            if (this.props.width !== prevProps.width || this.props.height !== prevProps.height) {\n                this.instance!.layout();\n            }\n        }\n\n        public componentWillUnmount() {\n            if (this.instance) {\n                this.instance.dispose();\n            }\n        }\n\n        render() {\n            return <div ref={this.assignRef} style={{width: this.props.width, height: this.props.height}} />;\n        }\n    }\n);\n","import styled from '@emotion/styled';\nimport {editor} from 'monaco-editor';\nimport React, {useMemo} from 'react';\nimport {CollapsiblePanel} from 'components/collapsible-panel';\nimport {Dialog} from 'components/dialog';\nimport {FileTitle} from 'components/file-title';\nimport {FileTreeView} from 'components/file-tree-view';\nimport {MonacoDiffViewer} from 'components/monaco-diff-viewer';\nimport {FileTree} from 'lib/file-tree';\n\ninterface DiffDialogProps {\n    original: editor.IModel;\n    modified: editor.IModel;\n    selectedFilename: string;\n    filenames: string[];\n    onSelectFile: (filename: string) => void;\n    onClose: () => void;\n}\n\nconst Panes = styled.div`\n    display: flex;\n    height: 100%;\n    border: 1px #ddd solid;\n`;\n\nconst EditorArea = styled.div`\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst EditorAreaCaption = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex: 0 0 30px;\n    background: #f6f6f6;\n`;\n\nconst EditorAreaTitle = styled.div`\n    font-size: 14px;\n`;\n\nconst EditorAreaContent = styled.div`\n    flex: 1 1 auto;\n    position: relative;\n    border-top: 1px #ddd solid;\n`;\n\nconst noop = () => null;\n\nfunction createTreeFromFilenames(filenames: string[]): FileTree {\n    return filenames.reduce((result, filename) => {\n        result[filename] = {content: ''};\n        return result;\n    }, {} as FileTree);\n}\n\nexport function DiffDialog(props: DiffDialogProps) {\n    const {onClose, filenames, selectedFilename, onSelectFile, ...otherProps} = props;\n    const fileTree = useMemo(() => createTreeFromFilenames(filenames), [filenames]);\n    return (\n        <Dialog onClose={onClose}>\n            <Panes>\n                <CollapsiblePanel id='solutionFiles' header='Files' orientation='vertical'>\n                    <FileTreeView\n                        fileTree={fileTree}\n                        selectedFilename={selectedFilename}\n                        onSelectFilename={onSelectFile}\n                        modifiedFilenames={{}}\n                        revertFile={noop}\n                    />\n                </CollapsiblePanel>\n                <EditorArea>\n                    <FileTitle filename={selectedFilename} readOnly={false} />\n                    <EditorAreaCaption>\n                        <EditorAreaTitle>Possible solution</EditorAreaTitle>\n                        <EditorAreaTitle>Current version</EditorAreaTitle>\n                    </EditorAreaCaption>\n                    <EditorAreaContent>\n                        <MonacoDiffViewer {...otherProps} />\n                    </EditorAreaContent>\n                </EditorArea>\n            </Panes>\n        </Dialog>\n    );\n}\n","import {editor, languages, MarkerSeverity} from 'monaco-editor';\nimport {DiagnosticMessageChain} from 'typescript';\n\nexport function flattenDiagnosticMessageText(\n    diag: string | DiagnosticMessageChain | undefined,\n    newLine: string,\n    indent = 0\n): string {\n    if (typeof diag === 'string') {\n        return diag;\n    } else if (diag === undefined) {\n        return '';\n    }\n    let result = '';\n    if (indent) {\n        result += newLine;\n\n        for (let i = 0; i < indent; i++) {\n            result += '  ';\n        }\n    }\n    result += diag.messageText;\n    indent++;\n    if (diag.next) {\n        for (const kid of diag.next) {\n            result += flattenDiagnosticMessageText(kid, newLine, indent);\n        }\n    }\n    return result;\n}\n\nexport async function revalidateModel(model: editor.IModel) {\n    if (!model || model.isDisposed()) return;\n\n    const getWorker = await languages.typescript.getTypeScriptWorker();\n    const worker = await getWorker(model.uri);\n    const diagnostics = (\n        await Promise.all([\n            worker.getSyntacticDiagnostics(model.uri.toString()),\n            worker.getSemanticDiagnostics(model.uri.toString())\n        ])\n    ).reduce((a, it) => a.concat(it));\n\n    const markers = diagnostics.map((d) => {\n        const start = model.getPositionAt(d.start!);\n        const end = model.getPositionAt(d.start! + d.length!);\n        return {\n            severity: MarkerSeverity.Error,\n            startLineNumber: start.lineNumber,\n            startColumn: start.column,\n            endLineNumber: end.lineNumber,\n            endColumn: end.column,\n            message: flattenDiagnosticMessageText(d.messageText, '\\n')\n        };\n    });\n    editor.setModelMarkers(model, 'typescript', markers);\n}\n","import {debounce} from 'debounce';\nimport {editor, languages, Uri} from 'monaco-editor';\nimport React from 'react';\nimport {decorateWithAutoResize} from 'components/auto-resizer';\nimport {DiffDialog} from 'components/monaco-editor/diff-dialog';\nimport {FileTree} from 'lib/file-tree';\nimport {revalidateModel} from './revalidate-model';\n\nlanguages.typescript.typescriptDefaults.setCompilerOptions({\n    strict: true,\n    target: languages.typescript.ScriptTarget.ES2018,\n    moduleResolution: languages.typescript.ModuleResolutionKind.NodeJs,\n    typeRoots: ['declarations']\n});\n\nexport interface MonacoEditorProps {\n    width?: string | number;\n    height?: string | number;\n    theme?: string;\n    options?: editor.IStandaloneEditorConstructionOptions;\n    namespace: string;\n    values: FileTree;\n    selectedFilename: string;\n    onChange: (filename: string, content: string) => void;\n    onNavigate: (filename: string) => void;\n    position: number | undefined;\n    showSolutions: boolean;\n    onSolutionsClose: () => void;\n}\n\nconst extensionsToLanguages: {[ext: string]: string} = {\n    ts: 'typescript',\n    json: 'json'\n};\n\ninterface Models {\n    [key: string]: editor.IModel;\n}\n\ninterface MonacoEditorState {\n    solutionsSelectedFilename?: string;\n    initialized?: boolean;\n}\n\nexport const MonacoEditor = decorateWithAutoResize(\n    class extends React.Component<MonacoEditorProps, MonacoEditorState> {\n        protected instance: editor.IStandaloneCodeEditor | null = null;\n        protected instanceDiv: HTMLElement | null = null;\n        protected models: Models = {};\n        protected solutionsModels: Models = {};\n        protected solutionsFilenames: string[] = [];\n        protected viewStates: {[filename: string]: editor.ICodeEditorViewState} = {};\n        protected lastUpdates: {[filename: string]: string} = {};\n\n        constructor(props: MonacoEditorProps) {\n            super(props);\n            this.state = {};\n        }\n\n        public componentDidMount() {\n            const {props} = this;\n\n            for (const [filename, {content, solution}] of Object.entries(props.values)) {\n                this.lastUpdates[filename] = content;\n                const language = extensionsToLanguages[filename.split('.').pop()!];\n                const model = editor.createModel(content, language, Uri.file(`${props.namespace}/${filename}`));\n                model.onDidChangeContent(\n                    debounce(() => {\n                        const newValue = model.getValue();\n                        this.lastUpdates[filename] = newValue;\n                        this.props.onChange(filename, newValue);\n                    }, 200)\n                );\n                this.models[filename] = model;\n                if (solution !== undefined) {\n                    this.solutionsModels[filename] = editor.createModel(solution, language);\n                }\n            }\n            this.solutionsFilenames = Object.keys(this.solutionsModels);\n\n            this.instance = editor.create(this.instanceDiv!, {\n                ...this.props.options,\n                model: this.models[props.selectedFilename],\n                readOnly: Boolean(props.values[props.selectedFilename].readOnly),\n                renderValidationDecorations: 'on'\n            });\n\n            this.instance.layout();\n\n            this.setState({initialized: true});\n        }\n\n        public componentWillUnmount() {\n            for (const filename of Object.keys(this.models)) {\n                this.models[filename].dispose();\n            }\n            for (const filename of Object.keys(this.solutionsModels)) {\n                this.solutionsModels[filename].dispose();\n            }\n            if (this.instance) {\n                this.instance.dispose();\n            }\n        }\n\n        public componentDidUpdate(prevProps: Readonly<MonacoEditorProps>): void {\n            if (!this.instance) {\n                return;\n            }\n            const newSelectedFilename = this.props.selectedFilename;\n            if (newSelectedFilename !== prevProps.selectedFilename) {\n                const model = this.models[newSelectedFilename];\n                this.viewStates[prevProps.selectedFilename] = this.instance.saveViewState()!;\n                this.instance.setModel(model);\n                this.instance.updateOptions({\n                    readOnly: Boolean(this.props.values[newSelectedFilename].readOnly)\n                });\n                revalidateModel(model);\n                const viewState = this.viewStates[newSelectedFilename];\n                if (viewState) {\n                    this.instance.restoreViewState(viewState);\n                }\n                this.instance.focus();\n            }\n            if (this.props.position !== prevProps.position) {\n                if (this.props.position !== undefined) {\n                    const model = this.models[this.props.selectedFilename];\n                    const position = model.getPositionAt(this.props.position);\n                    this.instance.setPosition(position);\n                    this.instance.revealLine(position.lineNumber);\n                    this.instance.focus();\n                }\n            }\n            if (this.props.width !== prevProps.width || this.props.height !== prevProps.height) {\n                this.instance.layout();\n            }\n            if (this.props.values !== prevProps.values) {\n                for (const [filename, value] of Object.entries(this.props.values)) {\n                    if (value.content !== this.lastUpdates[filename]) {\n                        this.lastUpdates[filename] = value.content;\n                        this.models[filename].setValue(value.content);\n                    }\n                }\n            }\n        }\n\n        render() {\n            const selectedSolutionFilename = this.getSelectedSolutionFilename();\n            return (\n                <>\n                    <div ref={this.assignRef} style={{width: this.props.width, height: this.props.height}} />\n                    {this.state.initialized && this.props.showSolutions && (\n                        <DiffDialog\n                            selectedFilename={selectedSolutionFilename}\n                            original={this.solutionsModels[selectedSolutionFilename]}\n                            modified={this.models[selectedSolutionFilename]}\n                            onClose={this.props.onSolutionsClose}\n                            onSelectFile={this.setSelectedSolutionFilename}\n                            filenames={this.solutionsFilenames}\n                        />\n                    )}\n                </>\n            );\n        }\n\n        setSelectedSolutionFilename = (solutionsSelectedFilename: string) => this.setState({solutionsSelectedFilename});\n\n        getSelectedSolutionFilename() {\n            if (this.state && this.state.solutionsSelectedFilename) {\n                return this.state.solutionsSelectedFilename;\n            }\n            return this.solutionsFilenames[0];\n        }\n\n        assignRef = (newRef: HTMLElement | null) => (this.instanceDiv = newRef);\n    }\n);\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport {ValidationError} from 'lib/validation-error';\n\nconst ValidationErrorsWrapper = styled.ol`\n    padding: 0;\n    margin: 5px 0 5px 40px;\n    list-style: none;\n    counter-reset: errors;\n`;\n\nconst ValidationErrorsItem = styled.li`\n    font-family: monospace;\n    font-size: 12px;\n    white-space: pre-wrap;\n    cursor: pointer;\n    & + & {\n        margin-top: 10px;\n    }\n    &:hover {\n        text-decoration: underline;\n    }\n    &::before {\n        counter-increment: errors;\n        content: counter(errors) '.';\n        display: inline-block;\n        width: 30px;\n        text-align: right;\n        margin-right: 10px;\n        margin-left: -40px;\n        color: gray;\n    }\n`;\n\nexport const ValidationErrors = React.memo(function ValidationErrors({\n    errors,\n    onClick\n}: {\n    errors: ValidationError[];\n    onClick: (error: ValidationError) => void;\n}) {\n    return (\n        <ValidationErrorsWrapper>\n            {errors.map((error, index) => (\n                <ValidationErrorsItem key={index} onClick={() => onClick(error)}>\n                    {error.messageText}\n                </ValidationErrorsItem>\n            ))}\n        </ValidationErrorsWrapper>\n    );\n});\n","/* eslint @typescript-eslint/no-var-requires: off */\n/* eslint import/no-webpack-loader-syntax: off */\n\nimport {FileTree} from './file-tree';\n\nconst typeAssertions: FileTree = {\n    '/node_modules/type-assertions/index.ts': {\n        content: require('!!raw-loader!../exercises/node_modules/type-assertions/index.ts').default,\n        readOnly: true\n    }\n};\n\nexport interface ExerciseStructure {\n    name: string;\n    files: FileTree;\n}\n\nfunction formatJson<T>(value: T): string {\n    return JSON.stringify(value, null, 4);\n}\n\nexport const exerciseStructures: Record<number, ExerciseStructure> = {\n    // 1: {\n    //     name: 'Any vs Unknown',\n    //     files: {\n    //         '/index.ts': {\n    //             content: require('!!raw-loader!../exercises/1/index.ts').default,\n    //             solution: require('!!raw-loader!../exercises/1/index.solution.ts').default\n    //         },\n    //         '/test.ts': {\n    //             content: require('!!raw-loader!../exercises-bk/1/test.ts').default,\n    //             readOnly: true\n    //         },\n    //         ...typeAssertions\n    //     }\n    // },\n    1: {\n        name: 'Indexed Access Type',\n        files: {\n            '/index.ts': {\n                content: require('!!raw-loader!../exercises/indexed-access-type/index.ts').default,\n                solution: require('!!raw-loader!../exercises/indexed-access-type/index.solution.ts').default\n            },\n            '/test.ts': {\n                content: require('!!raw-loader!../exercises/indexed-access-type/test.ts').default,\n                readOnly: true\n            },\n            ...typeAssertions\n        }\n    },\n    2: {\n        name: 'Branded Type',\n        files: {\n            '/index.ts': {\n                content: require('!!raw-loader!../exercises/branded-type/index.ts').default,\n                solution: require('!!raw-loader!../exercises/branded-type/index.solution.ts').default\n            },\n            '/test.ts': {\n                content: require('!!raw-loader!../exercises/branded-type/test.ts').default,\n                readOnly: true\n            },\n            ...typeAssertions\n        }\n    },\n    3: {\n        name: 'Generics',\n        files: {\n            '/index.ts': {\n                content: require('!!raw-loader!../exercises/generics/index.ts').default,\n                solution: require('!!raw-loader!../exercises/generics/index.solution.ts').default\n            },\n            '/mock.ts': {\n                content: require('!!raw-loader!../exercises/generics/mock.ts').default,\n                readOnly: true\n            },\n            '/test.ts': {\n                content: require('!!raw-loader!../exercises/generics/test.ts').default,\n                readOnly: true\n            },\n            ...typeAssertions\n        }\n    },\n    4: {\n        name: 'Generics With Inference',\n        files: {\n            '/index.ts': {\n                content: require('!!raw-loader!../exercises/generics-with-inference/index.ts').default,\n                solution: require('!!raw-loader!../exercises/generics-with-inference/index.solution.ts').default\n            },\n            '/mock.ts': {\n                content: require('!!raw-loader!../exercises/generics-with-inference/mock.ts').default,\n                readOnly: true\n            },\n            '/test.ts': {\n                content: require('!!raw-loader!../exercises/generics-with-inference/test.ts').default,\n                readOnly: true\n            },\n            ...typeAssertions\n        }\n    }\n    // 2: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/2/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/2/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/2/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 3: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/3/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/3/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/3/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 4: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/4/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/4/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/4/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 5: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/5/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/5/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/5/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 6: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/6/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/6/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/6/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 7: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/7/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/7/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/7/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 8: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/8/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/8/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/8/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 9: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/9/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/9/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/9/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 10: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/10/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/10/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/10/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 11: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/11/index.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/11/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/declarations/str-utils/index.d.ts': {\n    //         content: require('!!raw-loader!../exercises/11/declarations/str-utils/index.d.ts').default,\n    //         solution: require('!!raw-loader!../exercises/11/declarations/str-utils/index.solution.d.ts').default\n    //     },\n    //     '/node_modules/str-utils/index.js': {\n    //         content: require('!!raw-loader!../exercises/11/node_modules/str-utils/index.js').default,\n    //         readOnly: true\n    //     },\n    //     '/node_modules/str-utils/package.json': {\n    //         content: formatJson(require('../exercises/11/node_modules/str-utils/package.json')),\n    //         readOnly: true\n    //     },\n    //     '/node_modules/str-utils/README.md': {\n    //         content: require('!!raw-loader!../exercises/11/node_modules/str-utils/README.md').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 12: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/12/index.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/12/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/declarations/stats/index.d.ts': {\n    //         content: require('!!raw-loader!../exercises/12/declarations/stats/index.d.ts').default,\n    //         solution: require('!!raw-loader!../exercises/12/declarations/stats/index.solution.d.ts').default\n    //     },\n    //     '/node_modules/stats/index.js': {\n    //         content: require('!!raw-loader!../exercises/12/node_modules/stats/index.js').default,\n    //         readOnly: true\n    //     },\n    //     '/node_modules/stats/package.json': {\n    //         content: formatJson(require('../exercises/12/node_modules/stats/package.json')),\n    //         readOnly: true\n    //     },\n    //     '/node_modules/stats/README.md': {\n    //         content: require('!!raw-loader!../exercises/12/node_modules/stats/README.md').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 13: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/13/index.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/13/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/module-augmentations/date-wizard/index.d.ts': {\n    //         content: require('!!raw-loader!../exercises/13/module-augmentations/date-wizard/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/13/module-augmentations/date-wizard/index.solution.ts').default\n    //     },\n    //     '/node_modules/date-wizard/index.js': {\n    //         content: require('!!raw-loader!../exercises/13/node_modules/date-wizard/index.js').default,\n    //         readOnly: true\n    //     },\n    //     '/node_modules/date-wizard/index.d.ts': {\n    //         content: require('!!raw-loader!../exercises/13/node_modules/date-wizard/index.d.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/node_modules/date-wizard/package.json': {\n    //         content: formatJson(require('../exercises/13/node_modules/date-wizard/package.json')),\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 14: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/14/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/14/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/14/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 15: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/15/index.ts').default,\n    //         solution: require('!!raw-loader!../exercises/15/index.solution.ts').default\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/15/test.ts').default,\n    //         readOnly: true\n    //     },\n    //     ...typeAssertions\n    // },\n    // 16: {\n    //     '/index.ts': {\n    //         content: require('!!raw-loader!../exercises/16/index.ts').default,\n    //         readOnly: true\n    //     },\n    //     '/test.ts': {\n    //         content: require('!!raw-loader!../exercises/16/test.ts').default,\n    //         readOnly: true\n    //     }\n    // }\n};\n","export const localData = {\n    get<T>(key: string, defaultValue: T): T {\n        const data = localStorage.getItem(key);\n        if (data === null) {\n            return defaultValue;\n        }\n        return JSON.parse(data);\n    },\n    set(key: string, value: unknown) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n","import debounce from 'debounce';\nimport {Observable, ReplaySubject} from 'rxjs';\nimport {exerciseStructures} from 'lib/exercise-structures';\nimport {FileTree} from 'lib/file-tree';\nimport {localData} from 'lib/local-data';\n\nexport interface FileContents {\n    [filename: string]: string;\n}\n\nfunction createModifiedFileTree(contents: FileContents, tree: FileTree) {\n    const result: FileTree = {};\n    for (const filename of Object.keys(tree)) {\n        if (Object.prototype.hasOwnProperty.call(contents, filename)) {\n            result[filename] = {\n                content: contents[filename],\n                solution: tree[filename].solution,\n                readOnly: tree[filename].readOnly\n            };\n        } else {\n            result[filename] = tree[filename];\n        }\n    }\n    return result;\n}\n\ninterface Exercise {\n    observable$: Observable<FileTree>;\n    update(filename: string, code: string): void;\n    revert(fileName: string): void;\n}\n\nconst exercisesCache: {[key: number]: Exercise} = {};\n\nexport function createExercise(exerciseNumber: number) {\n    if (!exercisesCache[exerciseNumber]) {\n        const localStorageKey = `exercise.${exerciseNumber}`;\n        const exerciseOriginalFiles = exerciseStructures[exerciseNumber].files;\n\n        let files = localData.get(localStorageKey, {} as FileContents);\n\n        const saveToLocalStorage = debounce(() => {\n            localData.set(localStorageKey, files);\n        }, 500);\n\n        const subject = new ReplaySubject<FileTree>(1);\n        subject.next(createModifiedFileTree(files, exerciseOriginalFiles));\n\n        exercisesCache[exerciseNumber] = {\n            observable$: subject,\n            update(filename: string, code: string) {\n                files = {...files, [filename]: code};\n                saveToLocalStorage();\n                subject.next(createModifiedFileTree(files, exerciseOriginalFiles));\n            },\n            revert(filename: string) {\n                files = {...files};\n                delete files[filename];\n                saveToLocalStorage();\n                subject.next(createModifiedFileTree(files, exerciseOriginalFiles));\n            }\n        };\n    }\n\n    return exercisesCache[exerciseNumber];\n}\n","import qs from 'querystring';\nimport {ReplaySubject} from 'rxjs';\n\ninterface UrlParams {\n    exercise: string;\n    file: string;\n}\n\nconst defaultUrlParams = {\n    exercise: '1',\n    file: '/index.ts'\n};\n\nexport const urlParams = (() => {\n    const getCurrentRawParams = () => qs.parse(String(window.location.hash).substr(1));\n    const getCurrentParams = () => Object.assign({}, defaultUrlParams, getCurrentRawParams());\n\n    const subject = new ReplaySubject<UrlParams>(1);\n\n    subject.next(getCurrentParams());\n\n    window.addEventListener('hashchange', () => subject.next(getCurrentParams()));\n\n    return {\n        observable$: subject,\n        getCurrentRawParams,\n        extend(params: Partial<UrlParams>) {\n            window.location.hash = `#${qs.stringify(Object.assign(getCurrentParams(), params))}`;\n        }\n    };\n})();\n","import {ReplaySubject} from 'rxjs';\nimport {exerciseStructures} from 'lib/exercise-structures';\nimport {localData} from 'lib/local-data';\nimport {migrate} from 'observables/migrations/2020-09-26';\nimport {urlParams} from 'observables/url-params';\n\nexport interface ExercisesProgress {\n    completedExercises: Record<string, boolean>;\n}\n\nconst initialState: ExercisesProgress = {\n    completedExercises: {}\n};\n\nfunction switchToExercise(exerciseNumber: number) {\n    urlParams.extend({exercise: String(exerciseNumber), file: '/index.ts'});\n}\n\nexport const exercisesProgress = (() => {\n    migrate();\n\n    const localStorageKey = 'exercisesProgress';\n    const subject = new ReplaySubject<ExercisesProgress>(1);\n\n    const exercisesCount = Object.keys(exerciseStructures).length;\n\n    let state = localData.get(localStorageKey, initialState);\n\n    const saveToLocalStorage = () => localData.set(localStorageKey, state);\n\n    let currentExerciseNumber = 1;\n\n    if (!urlParams.getCurrentRawParams().exercise) {\n        for (currentExerciseNumber = 1; currentExerciseNumber <= exercisesCount; currentExerciseNumber++) {\n            if (!state.completedExercises[currentExerciseNumber]) {\n                break;\n            }\n        }\n\n        if (currentExerciseNumber !== 1) {\n            switchToExercise(currentExerciseNumber);\n        }\n    }\n\n    urlParams.observable$.subscribe((params) => {\n        currentExerciseNumber = Number(params.exercise || '1');\n    });\n\n    subject.next(state);\n\n    return {\n        completeExercise() {\n            state = {...state, completedExercises: {...state.completedExercises, [currentExerciseNumber]: true}};\n            saveToLocalStorage();\n            currentExerciseNumber = Math.min(currentExerciseNumber + 1, exercisesCount);\n            switchToExercise(currentExerciseNumber);\n            subject.next(state);\n        },\n        skipExercise() {\n            currentExerciseNumber = Math.min(currentExerciseNumber + 1, exercisesCount);\n            switchToExercise(currentExerciseNumber);\n        },\n        goToExercise(exerciseNumber: number) {\n            switchToExercise(exerciseNumber);\n        },\n        observable$: subject\n    };\n})();\n","interface OldExercisesProgress {\n    currentExerciseNumber: number;\n    lastCompletedExerciseNumber: number;\n}\n\ninterface NewExercisesProgress {\n    completedExercises: Record<string, boolean>;\n}\n\nexport function migrate() {\n    const localStorageKey = 'exercisesProgress';\n    const oldValueRaw = localStorage.getItem(localStorageKey);\n    if (oldValueRaw) {\n        try {\n            const oldValue = JSON.parse(oldValueRaw) as OldExercisesProgress | NewExercisesProgress;\n            if ('lastCompletedExerciseNumber' in oldValue) {\n                const newValue: NewExercisesProgress = {completedExercises: {}};\n                for (let i = 1; i <= oldValue.lastCompletedExerciseNumber; i++) {\n                    newValue.completedExercises[i] = true;\n                }\n                localStorage.setItem(localStorageKey, JSON.stringify(newValue));\n            }\n        } catch (e) {\n            localStorage.removeItem(localStorageKey);\n        }\n    }\n}\n","import {Observable, OperatorFunction} from 'rxjs';\nimport {FileTree} from 'lib/file-tree';\nimport {ValidationError} from 'lib/validation-error';\nimport {FileContents} from 'observables/exercise';\n\ninterface TypeScriptService extends Worker {\n    init(files: FileContents): Promise<void>;\n    updateFiles(files: FileContents): Promise<void>;\n    getErrors(): Promise<ValidationError[]>;\n}\n\n// eslint-disable-next-line import/no-webpack-loader-syntax, @typescript-eslint/no-var-requires\nconst createService = require('workerize-loader!./service.ts') as () => TypeScriptService;\n\nfunction fileTreeToFileContents(tree: FileTree): FileContents {\n    return Object.keys(tree).reduce((res, filename) => {\n        res[filename] = tree[filename].content;\n        return res;\n    }, {} as FileContents);\n}\n\nfunction diffFiles(oldFiles: FileContents, newFiles: FileContents) {\n    return Object.keys(newFiles).reduce((res, filename) => {\n        if (newFiles[filename] !== oldFiles[filename]) {\n            res[filename] = newFiles[filename];\n        }\n        return res;\n    }, {} as FileContents);\n}\n\nexport function checkTypeScriptProject(): OperatorFunction<FileTree, ValidationError[]> {\n    return (parentObservable: Observable<FileTree>): Observable<ValidationError[]> => {\n        const service = createService();\n        return new Observable((subscriber) => {\n            let initialized = false;\n            let prevFiles = {} as FileContents;\n            const subscription = parentObservable.subscribe(async (files) => {\n                const contents = fileTreeToFileContents(files);\n                if (!initialized) {\n                    initialized = true;\n                    prevFiles = contents;\n                    await service.init(contents);\n                } else {\n                    const oldFiles = prevFiles;\n                    const newFiles = contents;\n                    prevFiles = contents; // Doing this assignment before the the update call. Just in case.\n                    await service.updateFiles(diffFiles(oldFiles, newFiles));\n                }\n                subscriber.next(await service.getErrors());\n            });\n            subscriber.add(() => {\n                service.terminate();\n                subscription.unsubscribe();\n            });\n        });\n    };\n}\n","import styled from '@emotion/styled';\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {CollapsiblePanel} from 'components/collapsible-panel';\nimport {FileTitle} from 'components/file-title';\nimport {FileTreeView} from 'components/file-tree-view';\nimport {load} from 'components/loading-container';\nimport {MonacoEditor} from 'components/monaco-editor';\nimport {ValidationErrors} from 'components/validation-errors';\nimport {exerciseStructures} from 'lib/exercise-structures';\nimport {FileTree} from 'lib/file-tree';\nimport {ValidationError} from 'lib/validation-error';\nimport {createExercise} from 'observables/exercise';\nimport {exercisesProgress} from 'observables/exercises-progress';\nimport {urlParams} from 'observables/url-params';\nimport {checkTypeScriptProject} from 'operators/check-type-script-project';\n\nconst lastExerciseNumber = Number(Object.keys(exerciseStructures).pop());\n\nconst ExerciseWrapper = styled.div`\n    flex: 1 0 100%;\n    align-self: stretch;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst EditorWrapper = styled.div`\n    flex: 1 1 auto;\n    position: relative;\n    min-width: 1px;\n`;\n\nconst ExercisePanelWrapper = styled.div`\n    padding: 5px 10px;\n    overflow: auto;\n    height: 120px;\n    box-sizing: border-box;\n`;\n\nconst MainAreaWrapper = styled.div`\n    min-width: 1px;\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst CompletedExerciseWrapper = styled.div`\n    text-align: center;\n`;\n\nconst CompletedExerciseLabel = styled.div`\n    margin: 20px 0 0;\n`;\n\nconst ButtonsWrapper = styled.div`\n    text-align: center;\n    margin: 20px 0;\n`;\n\nconst ExerciseButton = styled.button`\n    font-size: 16px;\n    text-align: center;\n    & + & {\n        margin-left: 10px;\n    }\n`;\n\nfunction calculateModifiedFilenames(exerciseNumber: number, fileTree: FileTree) {\n    const files = exerciseStructures[exerciseNumber].files;\n    const result: Record<string, true> = {};\n    for (const [filename, {content}] of Object.entries(fileTree)) {\n        if (content !== files[filename].content) {\n            result[filename] = true;\n        }\n    }\n    return result;\n}\n\nexport function Exercise({exerciseNumber}: {exerciseNumber: number}) {\n    const exercise = useMemo(() => createExercise(exerciseNumber), [exerciseNumber]);\n    const [position, setPosition] = useState(undefined as number | undefined);\n    const [solutionsVisible, setSolutionsVisible] = useState(false);\n    const validationErrors$ = useMemo(() => exercise.observable$.pipe(checkTypeScriptProject()), [exercise]);\n    const [selectedFilename, setSelectedFilename] = useState('/index.ts');\n    useEffect(() => {\n        const subscription = urlParams.observable$.subscribe((params) => {\n            setSelectedFilename(String(params.file));\n        });\n        return () => subscription.unsubscribe();\n    }, [setSelectedFilename]);\n\n    const goToFile = useCallback((file: string) => urlParams.extend({file}), []);\n\n    const onErrorClick = useCallback(\n        (error: ValidationError) => {\n            if (!error.file) {\n                return;\n            }\n            goToFile(error.file);\n            setPosition(error.start);\n        },\n        [setPosition, goToFile]\n    );\n    const onChange = useCallback(\n        (filename: string, content: string) => {\n            exercise.update(filename, content);\n        },\n        [exercise]\n    );\n    const [showSolutions, hideSolutions] = useMemo(\n        () => [() => setSolutionsVisible(true), () => setSolutionsVisible(false)],\n        [setSolutionsVisible]\n    );\n\n    return load(exercise.observable$, (fileTree) => (\n        <ExerciseWrapper>\n            <CollapsiblePanel id='files' header='Files' orientation='vertical'>\n                <FileTreeView\n                    selectedFilename={selectedFilename}\n                    fileTree={exerciseStructures[exerciseNumber].files}\n                    onSelectFilename={goToFile}\n                    modifiedFilenames={calculateModifiedFilenames(exerciseNumber, fileTree)}\n                    revertFile={exercise.revert}\n                />\n            </CollapsiblePanel>\n            <MainAreaWrapper>\n                <FileTitle filename={selectedFilename} readOnly={Boolean(fileTree[selectedFilename].readOnly)} />\n                <EditorWrapper>\n                    <MonacoEditor\n                        namespace={String(exerciseNumber)}\n                        selectedFilename={selectedFilename}\n                        values={fileTree}\n                        onChange={onChange}\n                        theme='vs-light'\n                        position={position}\n                        onNavigate={() => null}\n                        options={{\n                            minimap: {\n                                enabled: false\n                            }\n                        }}\n                        showSolutions={solutionsVisible}\n                        onSolutionsClose={hideSolutions}\n                    />\n                </EditorWrapper>\n                {load(validationErrors$, (errors) => (\n                    <CollapsiblePanel\n                        id='exercise'\n                        header={errors.length > 0 ? `Errors (${errors.length})` : 'Completed'}\n                        orientation='horizontal'>\n                        <ExercisePanelWrapper>\n                            {errors.length > 0 && (\n                                <>\n                                    <ValidationErrors errors={errors} onClick={onErrorClick} />\n                                    <ButtonsWrapper>\n                                        {'I give up, '}\n                                        <ExerciseButton onClick={showSolutions}>\n                                            show a possible solution\n                                        </ExerciseButton>{' '}\n                                        &nbsp; or\n                                        <ExerciseButton onClick={exercisesProgress.skipExercise}>skip</ExerciseButton>\n                                    </ButtonsWrapper>\n                                </>\n                            )}\n                            {errors.length === 0 && (\n                                <CompletedExerciseWrapper>\n                                    <CompletedExerciseLabel>\n                                        {exerciseNumber === lastExerciseNumber ? (\n                                            <>Congratulations! That was the last exercise.</>\n                                        ) : (\n                                            <>Good job! Exercise {exerciseNumber} is completed.</>\n                                        )}\n                                    </CompletedExerciseLabel>\n                                    {exerciseNumber !== lastExerciseNumber && (\n                                        <ButtonsWrapper>\n                                            <ExerciseButton onClick={exercisesProgress.completeExercise}>\n                                                Next exercise\n                                            </ExerciseButton>\n                                            <ExerciseButton onClick={showSolutions}>Compare my solution</ExerciseButton>\n                                        </ButtonsWrapper>\n                                    )}\n                                </CompletedExerciseWrapper>\n                            )}\n                        </ExercisePanelWrapper>\n                    </CollapsiblePanel>\n                ))}\n            </MainAreaWrapper>\n        </ExerciseWrapper>\n    ));\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst FooterWrapper = styled.footer`\n    flex: 0 0 auto;\n    border-top: 1px solid #294e80;\n    padding: 5px 0;\n    text-align: center;\n    color: gray;\n    font-size: 12px;\n    a,\n    a:hover,\n    a:visited,\n    a:active {\n        color: inherit;\n    }\n    z-index: 1;\n`;\n\nconst currentYear = new Date().getFullYear();\n\nexport function Footer() {\n    return (\n        <FooterWrapper>\n            &copy; {currentYear} <a href='https://github.com/mdevils'>Marat Dulin</a>,{' '}\n            <a href='https://github.com/typescript-exercises/typescript-exercises'>contribute</a>,{' '}\n            <a href='https://www.patreon.com/mdevils'>support for the original project</a>\n        </FooterWrapper>\n    );\n}\n","import React from 'react';\n\nexport function TsLogo() {\n    return (\n        <svg fill='none' height='26' viewBox='0 0 27 26' width='27' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                clipRule='evenodd'\n                d='m.98608 0h24.32332c.5446 0 .9861.436522.9861.975v24.05c0 .5385-.4415.975-.9861.975h-24.32332c-.544597 0-.98608-.4365-.98608-.975v-24.05c0-.538478.441483-.975.98608-.975zm13.63142 13.8324v-2.1324h-9.35841v2.1324h3.34111v9.4946h2.6598v-9.4946zm1.0604 9.2439c.4289.2162.9362.3784 1.5218.4865.5857.1081 1.2029.1622 1.8518.1622.6324 0 1.2331-.0595 1.8023-.1784.5691-.1189 1.0681-.3149 1.497-.5879s.7685-.6297 1.0187-1.0703.3753-.9852.3753-1.6339c0-.4703-.0715-.8824-.2145-1.2365-.1429-.3541-.3491-.669-.6186-.9447-.2694-.2757-.5925-.523-.9692-.7419s-.8014-.4257-1.2743-.6203c-.3465-.1406-.6572-.2771-.9321-.4095-.275-.1324-.5087-.2676-.7011-.4054-.1925-.1379-.3409-.2838-.4454-.4379-.1045-.154-.1567-.3284-.1567-.523 0-.1784.0467-.3392.1402-.4824.0935-.1433.2254-.2663.3959-.369s.3794-.1824.6269-.2392c.2474-.0567.5224-.0851.8248-.0851.22 0 .4523.0162.697.0486.2447.0325.4908.0825.7382.15.2475.0676.4881.1527.7218.2555.2337.1027.4495.2216.6475.3567v-2.4244c-.4015-.1514-.84-.2636-1.3157-.3365-.4756-.073-1.0214-.1095-1.6373-.1095-.6268 0-1.2207.0662-1.7816.1987-.5609.1324-1.0544.3392-1.4806.6203s-.763.6392-1.0104 1.0743c-.2475.4352-.3712.9555-.3712 1.5609 0 .7731.2268 1.4326.6805 1.9785.4537.546 1.1424 1.0082 2.0662 1.3866.363.146.7011.2892 1.0146.4298.3134.1405.5842.2865.8124.4378.2282.1514.4083.3162.5403.4946s.198.3811.198.6082c0 .1676-.0413.323-.1238.4662-.0825.1433-.2076.2676-.3753.373s-.3766.1879-.6268.2473c-.2502.0595-.5431.0892-.8785.0892-.5719 0-1.1383-.0986-1.6992-.2959-.5608-.1973-1.0805-.4933-1.5589-.8879z'\n                fill='#fff'\n                fillRule='evenodd'\n            />\n        </svg>\n    );\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport {TsLogo} from 'components/header/ts-logo';\n\nconst HeaderWrapper = styled.header`\n    flex: 0 0 auto;\n    background: #294e80;\n    padding: 10px 16px;\n    z-index: 1;\n`;\n\nconst HeaderLogo = styled.h1`\n    margin: 0;\n    padding: 0;\n    font-weight: 300;\n    color: white;\n    font-family: Helvetica, Arial, serif;\n    letter-spacing: -1px;\n    font-size: 30px;\n    strong {\n        font-weight: 500;\n    }\n    svg {\n        margin-right: 10px;\n        position: relative;\n        top: 3px;\n    }\n`;\n\nconst HeaderSubLogo = styled.span`\n    font-size: 24px;\n    margin-left: 20px;\n    color: yellow;\n    opacity: 0.9;\n`;\n\nexport function Header() {\n    return (\n        <HeaderWrapper>\n            <HeaderLogo>\n                <TsLogo />\n                TypeScript\n                <HeaderSubLogo>exercises</HeaderSubLogo>\n            </HeaderLogo>\n        </HeaderWrapper>\n    );\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport {combineLatest} from 'rxjs';\nimport {load} from 'components/loading-container';\nimport {exerciseStructures} from 'lib/exercise-structures';\nimport {exercisesProgress} from 'observables/exercises-progress';\nimport {urlParams} from 'observables/url-params';\n\nconst Wrapper = styled.div`\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    background: #faf9f8;\n    border-bottom: 1px solid #294e80;\n    align-items: center;\n    padding: 0 10px;\n    user-select: none;\n`;\n\nconst NavBar = styled.nav`\n    flex: 1 1 auto;\n    list-style-type: none;\n`;\n\nconst NavBarLabel = styled.li`\n    display: inline-block;\n    font-weight: bold;\n    margin-right: 20px;\n    opacity: 0.75;\n`;\n\nconst NavBarItem = styled.li<{completed: boolean; current: boolean}>`\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    line-height: 30px;\n    color: ${({completed}) => (completed ? 'inherit' : 'gray')};\n    cursor: pointer;\n    font-weight: ${({current}) => (current ? 'bold' : 'normal')};\n    &::after {\n        content: '·';\n        margin: 0 5px;\n        opacity: 0.25;\n    }\n    &:last-of-type::after {\n        display: none;\n    }\n`;\n\nexport function Navigation() {\n    return (\n        <Wrapper>\n            <NavBar>\n                {load(\n                    combineLatest([exercisesProgress.observable$, urlParams.observable$]),\n                    ([{completedExercises}, params]) => (\n                        <>\n                            <NavBarLabel>Exercises</NavBarLabel>\n                            {Object.keys(exerciseStructures).map((exerciseNumber) => (\n                                <NavBarItem\n                                    completed={completedExercises[exerciseNumber]}\n                                    current={Number(exerciseNumber) === Number(params.exercise)}\n                                    onClick={() => exercisesProgress.goToExercise(Number(exerciseNumber))}\n                                    key={exerciseNumber}>\n                                    {exerciseNumber} - {exerciseStructures[Number(exerciseNumber)]?.name}\n                                </NavBarItem>\n                            ))}\n                        </>\n                    )\n                )}\n            </NavBar>\n        </Wrapper>\n    );\n}\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport {Footer} from 'components/footer';\nimport {Header} from 'components/header';\nimport {Navigation} from 'containers/navigation';\n\nconst PageLayoutWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst PageLayoutMain = styled.main`\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 auto;\n    position: relative;\n`;\n\nexport function PageLayout({children}: {children: React.ReactNode}) {\n    return (\n        <PageLayoutWrapper>\n            <Header />\n            <Navigation />\n            <PageLayoutMain>{children}</PageLayoutMain>\n            <Footer />\n        </PageLayoutWrapper>\n    );\n}\n","import {css} from '@emotion/core';\n\nexport const fonts = css`\n    @font-face {\n        font-family: SegoeUI;\n        src: local('Segoe UI Light'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff2) format('woff2'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff) format('woff'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.ttf) format('truetype');\n        font-weight: 100;\n    }\n\n    @font-face {\n        font-family: SegoeUI;\n        src: local('Segoe UI Semilight'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff2) format('woff2'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff) format('woff'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.ttf) format('truetype');\n        font-weight: 200;\n    }\n\n    @font-face {\n        font-family: SegoeUI;\n        src: local('Segoe UI'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff2) format('woff2'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff) format('woff'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.ttf) format('truetype');\n        font-weight: 400;\n    }\n\n    @font-face {\n        font-family: SegoeUI;\n        src: local('Segoe UI Bold'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff2) format('woff2'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff) format('woff'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.ttf) format('truetype');\n        font-weight: 600;\n    }\n\n    @font-face {\n        font-family: SegoeUI;\n        src: local('Segoe UI Semibold'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff2) format('woff2'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff) format('woff'),\n            url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.ttf) format('truetype');\n        font-weight: 700;\n    }\n`;\n","import {Global, css} from '@emotion/core';\nimport React from 'react';\nimport {load} from 'components/loading-container';\nimport {Exercise} from 'containers/exercise';\nimport {PageLayout} from 'containers/page-layout';\nimport {urlParams} from 'observables/url-params';\nimport {fonts} from './fonts';\n\nconst globalStyles = css`\n    html,\n    body,\n    #root {\n        margin: 0;\n        height: 100%;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-family: 'Segoe UI Web (West European)', Segoe UI, -apple-system, BlinkMacSystemFont, Roboto, Helvetica Neue,\n            sans-serif;\n        font-size: 16px;\n    }\n    ${fonts}\n`;\n\nexport function App() {\n    return (\n        <>\n            <Global styles={globalStyles} />\n            <PageLayout>\n                {load(urlParams.observable$, (params) => (\n                    <Exercise key={params.exercise} exerciseNumber={Number(params.exercise)} />\n                ))}\n            </PageLayout>\n        </>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from 'containers/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}